/*
 * Copyright 2017-2019 JetBrains s.r.o. Use of this source code is governed by the Apache 2.0 license.
 * Copyright 2020 https://github.com/natanfudge
 * Copyright 2020 Modified by Mike Penz to be more flexible
 */

// Configures publishing of Maven artifacts to Bintray
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

apply from: project.rootProject.file('gradle/mavenMetadata.gradle')

task stubSources(type: Jar) {
    classifier = 'sources'
}

task stubJavadoc(type: Jar) {
    classifier = 'javadoc'
}

task emptyJar(type: Jar) {
}

afterEvaluate {
    task mainSourcesJar(type: Jar) {
        classifier = 'sources'
        from kotlin.sourceSets.commonMain.kotlin
    }
}

afterEvaluate {
    publishing {
        publications.all {
            if (it.name.contains('kotlinMultiplatform')) {
                artifactId = "$POM_ARTIFACT_ID"
                apply from: "${rootDir}/gradle/publish-mpp-root-module-in-platform.gradle"
                publishPlatformArtifactsInRootModule(publications["jvm"])
            } else if (it.name.contains('metadata')) {
                artifactId = "$POM_ARTIFACT_ID-metadata"
            } else if (it.name.contains('android')) {
                artifactId = "$POM_ARTIFACT_ID-android"
            } else {
                artifactId = "$POM_ARTIFACT_ID-${it.name}"
            }

            if (it.name == "jvm" || it.name.contains("android")) {
                artifact javadocJar
            } else if (it.name != 'kotlinMultiplatform') {
                artifact stubJavadoc
            }

            pom.withXml(configureMavenCentralMetadata)
        }
    }
}

apply from: project.rootProject.file("gradle/bintray.gradle")

publishing {
    publications {
        mavenProject(MavenPublication) {
        }
    }
}

bintrayUpload.doFirst {
    publications = publishing.publications.collect {
        it.name
    }.findAll {
        it != "mavenProject"
    }
}

// This is required for K/N publishing
bintrayUpload.dependsOn publishToMavenLocal