/*
 * Copyright 2017-2019 JetBrains s.r.o. Use of this source code is governed by the Apache 2.0 license.
 * Copyright 2020 https://github.com/natanfudge
 * Copyright 2020 Modified by Mike Penz to be more flexible
 */

// Configures publishing of Maven artifacts to Bintray
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

apply from: project.rootProject.file('gradle/mavenMetadata.gradle')

task stubSources(type: Jar) {
    classifier = 'sources'
}

task stubJavadoc(type: Jar) {
    classifier = 'javadoc'
}

task emptyJar(type: Jar) {
}

afterEvaluate {
    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from kotlin.sourceSets.commonMain.kotlin
    }

    task androidSourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.source
    }
}

afterEvaluate {
    ext.addDependency = { dependencyNode, group, name, version ->
        dependencyNode.appendNode('groupId', group)
        dependencyNode.appendNode('artifactId', name)
        dependencyNode.appendNode('version', version)
        dependencyNode.appendNode('scope', "compile")
    }

    publishing {
        publications {
            android(MavenPublication) {
                groupId GROUP
                artifactId POM_ARTIFACT_ID
                version project.release.versionName
                artifact("$buildDir/outputs/aar/$POM_ARTIFACT_ID-release.aar")
                artifact androidSourcesJar

                pom.withXml {
                    asNode().appendNode('name', POM_NAME)
                    asNode().appendNode('description', POM_DESCRIPTION)
                    asNode().appendNode('url', POM_SCM_URL)
                    def dependenciesNode = asNode().appendNode('dependencies')
                    configurations.implementation.allDependencies.each {
                        // Ensure dependencies such as fileTree are not included.
                        if (it.name != 'unspecified') {
                            def dependencyNode = dependenciesNode.appendNode('dependency')
                            if (it.version != "unspecified") {
                                addDependency(dependencyNode, it.group, it.name, it.version)
                            } else {
                                addDependency(dependencyNode, it.getDependencyProject().findProperty("GROUP"), it.getDependencyProject().findProperty("POM_ARTIFACT_ID"), project.release.versionName)
                            }
                        }
                    }
                    asNode().children().last() + pomConfig
                }
            }
        }
    }

    project.publishing.publications.all {
        // rename artifacts
        if (!(it.name.contains("mavenProject") && it.name == "library")) {
            if (it.name.contains('metadata')) {
                artifactId = "$POM_ARTIFACT_ID"
            } else {
                artifactId = "$POM_ARTIFACT_ID-$name"
                artifact javadocJar
            }
        }
    }
}

apply from: project.rootProject.file("gradle/bintray.gradle")

publishing {
    publications {
        mavenProject(MavenPublication) {
        }
    }
}

bintrayUpload.doFirst {
    publications = publishing.publications.collect {
        it.name
    }.findAll {
        it != "kotlinMultiplatform"
    }
}

// This is required for K/N publishing
bintrayUpload.dependsOn publishToMavenLocal