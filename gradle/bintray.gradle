/*
 * Copyright 2017-2019 JetBrains s.r.o. Use of this source code is governed by the Apache 2.0 license.
 * Copyright 2020 Modified by Mike Penz to be more flexible
 */

@SuppressWarnings(["GroovyUnusedDeclaration", "GrMethodMayBeStatic"])
def isReleaseBuild() {
    return !VERSION_NAME.contains("SNAPSHOT")
}

@SuppressWarnings("GroovyUnusedDeclaration")
def getRepositoryUsername() {
    return hasProperty('NEXUS_USERNAME') ? NEXUS_USERNAME : ""
}

@SuppressWarnings("GroovyUnusedDeclaration")
def getRepositoryPassword() {
    return hasProperty('NEXUS_PASSWORD') ? NEXUS_PASSWORD : ""
}

bintray {
    dryRun = false
    publish = true
    override = true

    user = project.hasProperty('bintray.user') ? project.property('bintray.user') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintray.apikey') ? project.property('bintray.apikey') : System.getenv('BINTRAY_API_KEY')
    def gpgkey = project.hasProperty('bintray.gpg.key') ? project.property('bintray.gpg.key') : System.getenv('BINTRAY_GPG_KEY')
    def gpgpass = project.hasProperty('bintray.gpg.password') ? project.property('bintray.gpg.password') : System.getenv('BINTRAY_GPG_PASS')
    def versionName = project.release.versionName

    pkg {
        repo = "mptest"
        name = GROUP + ":" + POM_ARTIFACT_ID //the name (= identifier) on bintray
        desc = POM_DESCRIPTION

        websiteUrl = POM_URL
        issueTrackerUrl = POM_SCM_URL_ISSUES
        vcsUrl = POM_SCM_URL

        githubRepo = POM_GITHUB_REPO
        githubReleaseNotesFile = POM_GITHUB_README

        publicDownloadNumbers = true
        licenses = ["Apache-2.0"]

        version {
            name = versionName
            vcsTag = versionName
            released = new Date()

            mavenCentralSync {
                sync = false
                user = getRepositoryUsername()
                password = getRepositoryPassword()
                close = '1'
            }
            gpg {
                sign = false
                passphrase = gpgpass
            }
        }
    }
}